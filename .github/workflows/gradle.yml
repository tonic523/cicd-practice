# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - uses: actions/checkout@v3
    - run: touch ./src/main/resources/application.properties
    - run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
    - run: cat ./src/main/resources/application.properties
  
    # 빌드(CI)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
  
    # 배포할 bootJar 파일 생성
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: bootJar
      
    # 배포 (scp)
    - name: Deploy build outputs
      uses: appleboy/scp-action@master
      with:
        username: ubuntu
        host: ${{ secrets.BACKEND_HOST }}
        key: ${{ secrets.BACKEND_KEY }}
        source: "./build/libs/*.jar"
        target: "/home/ubuntu"
        strip_components: 1
